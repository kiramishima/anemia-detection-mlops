services:
  platform:
    env_file:
      - .env.dev
    build:
      context: .
    command: /app/run_app.sh mage start $PROJECT_NAME
    ports:
      - 6789:6789
    volumes:
      # Mount your local codebase to the container.
      - .:/$MAGE_CODE_PATH
      # Store the data output on local machine to easily debug (optional).
      - "./mage_data:/$MAGE_CODE_PATH/mage_data"
    restart: on-failure:5
    networks:
      - app-network
    depends_on:
      - magic-database
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging
  magic-database:
    image: pgvector/pgvector:0.7.2-pg16
    env_file:
      - .env.dev
    ports:
      - 5432:5432
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
      # Custom database initialization scripts (optional).
      - "./scripts/database:/docker-entrypoint-initdb.d"
    restart: always
    networks:
      - app-network
  mlflow:
    env_file:
      - .env.dev
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    ports:
      - 5000:5000
    volumes:
      - "${PWD}/mlflow:/home/mlflow/:rw"
    networks:
      - app-network
    depends_on:
      - magic-database
      - s3
  monitoring:
    env_file:
      - .env.dev
    build:
      context: .
      dockerfile: evidently.Dockerfile
    ports:
      - 8000:8000
    networks:
      - app-network
    depends_on:
      - s3
  lambda:
    build:
      context: ../lambdas
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    networks:
      - app-network
    depends_on:
      - s3
      - mlflow
  s3:
    image: localstack/localstack:s3-latest
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3
    networks:
      - app-network
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./s3}:/var/lib/localstack"
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: